frequency: 30
odom_frame: odom
base_link_frame: base_link
world_frame: odom
map_frame: map
predict_to_current_time: true
two_d_mode: false
#smooth_lagged_data: true
print_diagnostics: true
publish_tf: true
disabled_at_startup: false

#[x_pos   , y_pos    , z_pos,
# roll    , pitch    , yaw,
# x_vel   , y_vel    , z_vel,
# roll_vel, pitch_vel, yaw_vel,
# x_accel , y_accel  , z_accel]

odom0: /odometry/gps
odom0_config: [true,  true,  true,   # x,   y,   z
               false, false, false,   # r,   p,   w (yaw)
               false, false, false,   # dx,  dy,  dz
               false, false, false,   # dr,  dp,  dw
               false, false, false]   # ddx, ddy, ddz
odom0_differential: false
#odom0_nodelay: true
odom0_queue_size: 200

odom1: /mobile_base_controller/odom
odom1_config: [false, false, false,   # x,   y,   z
               false, false, false,   # r,   p,   w (yaw)
               true,  true,  true,    # dx,  dy,  dz
               false, false, true,    # dr,  dp,  dw
               false, false, false]   # ddx, ddy, ddz
odom1_differential: true
#odom1_nodelay: false
odom1_queue_size: 200



imu0: /bno085/navheading
imu0_config: [false, false, false,   # x,   y,   z
              true,  true,  true,    # r,   p,   w (yaw)
              false, false, false,   # dx,  dy,  dz
              true,  true,  true,    # dr,  dp,  dw
              true,  true,  true,]   # ddx, ddy, ddz
imu0_differential: false
imu0_queue_size: 200
#imu0_nodelay: false
imu0_remove_gravitational_acceleration: true

#imu1: /gnss/navheading
#imu1_config: [false, false, false,
#              false,  false,  true,
#              false, false, false,
#              false,  false,  false,
#              false,  false,  false]
#imu1_nodelay: false
#imu1_differential: false
#imu1_relative: false
#imu1_queue_size: 200


dynamic_process_noise_covariance: false
#
## [ADVANCED] The process noise covariance matrix can be difficult to tune, and can vary for each application, so it is
## exposed as a configuration parameter. This matrix represents the noise we add to the total error after each
## prediction step. The better the omnidirectional motion model matches your system, the smaller these values can be.
## However, if users find that a given variable is slow to converge, one approach is to increase the
## process_noise_covariance diagonal value for the variable in question, which will cause the filter's predicted error
## to be larger, which will cause the filter to trust the incoming measurement more during correction. The values are
## ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Defaults to the matrix below if
## unspecified.
#process_noise_covariance: [0.3, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0.3, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0.05, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0.001, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0.001, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0.001, 0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0.02, 0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0.0, 0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0.07, 0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0.001, 0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.001, 0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.001, 0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.01, 0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.01, 0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.015]
#
#process_noise_covariance: [0.05, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0.05, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0.06, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0.03, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0.03, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0.06, 0,     0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0.025, 0,     0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0.025, 0,    0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0.04, 0,    0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0.01, 0,    0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.01, 0,    0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.02, 0,    0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.01, 0,    0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.01, 0,
#                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.015]
#
### [ADVANCED] This represents the initial value for the state estimate error covariance matrix. Setting a diagonal
### value (variance) to a large value will result in rapid convergence for initial measurements of the variable in
### question. Users should take care not to use large values for variables that will not be measured directly. The values
### are ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Defaults to the matrix below
###if unspecified.
initial_estimate_covariance: [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    1e-9, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    1e-9, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-9,  0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-9,  0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-9,  0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-9, 0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-9, 0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-9]